1.1.1
a.) 7
b.) 200.0000002
c.) True

1.1.2
a.) double 1.618
b.) double 10.0
c.) boolean true
d.) string "33"

1.1.3
public static void main(String [] args) {
	
int a, b, c;

a = Interger.parseInt(args[0]);
b = Interger.parseInt(args[0]);
c = Interger.parseInt(args[0]);

if (a==b && b==c) {
	System.out.println("Equal.");
} else {
	System.out.println("Not Equal.");
}
}

1.1.4
a.) word "then" not required. correct statement if(a>b) c=0;
b.) brackets needed. correct statement if(a>b) {c=0;}
c.) correct
d.) both need to end with semi-colon. correct statement if(a>b) c=0; else b=0;

1.1.5
import java.util.Scanner;
public static void main (String [] args) {

Scanner console = Scanner(System.in);
double a, b;

System.out.println(“Enter two double values.”);

a = console.nextDouble();
b = console.nextDouble();

if ((a>0 && a<1) && (b>0 && b<1)) {
	System.out.println(“True”);
} else {
	System.out.println(“False”);
}
}


1.1.6
0
1
1
2
3
5
8
13
21
34
55
89
144
233
377
610

1.1.7
a.) 3.00009
b.) 499500
c.) 10000

1.1.8
a.) b
b.) 197
c.) e

1.1.12
0
1
2
3
4
5
6
7
8
9

1.2.6
boolean isRotation(String s1,String s2) {
    return (s1.length() == s2.length()) && ((s1+s1).indexOf(s2) != -1);
}

1.2.12
public static String dayOfTheWeek (int yr, int mon, int dt) {

Calendar calendar = Calendar.getInstance();
calndr.set(yr, mon-1, dt);
String [] DayOfWeek = new String [] {“Monday”, “Tuesday”, “Wednesday”,
				     “Thursday”, “Friday”, “Saturday”,
				     “Sunday”};
return DayOfWeek[calndr.get(Calendar.DAY_OF_WEEK) - 1];
}

1.3.3
a, b, c, d, f, g

1.3.9
public static void main (String [] args) {

Stack ops = new Stack();
Stack exp = new Stack();

System.out.println(“Enter and expression with only the left parenthesis.”);

while(!Stdln.isEmpty()) {
	String inp = Stdln.readString();
	if(inp.equals(“+”) || inp.equals(“-“) ||
	   inp.equals(“*”) || inp.equals(“/“))
		ops.push(inp);
	} else if(inp.equals(“)”)) {
		String op = ops.pop();
		String opernd1 = exp.pop();
		String opernd2 = exp.pop();
		Sting newExp = “(“ + opernd2 + “ ” + op + “ “ + opernd1 + “)”;
	} else {
		exp.push(inp);
	}

System.out.println(“The expression with parenthesis is:”);

while(!exp.isEmpty()) {
	System.out.println(exp.pop() + “ “);
}
}


1.4.1
  N(N-1)(N-2)   3*2*1
= ----------- = ----- = 1
       6          6
           
  N(N-1)(N-2)   4*3*2
= ----------- = ----- = 4
       6          6
    

  (N+1)(N-1+1)(N-2+1)   (N+1)N(N-1)
= ------------------- = -----------
           6                 6


  N(N-1)(N-2)             N(N-1)(N-2)   N(N-1)   N(N-1)(N-2) + 3N(N-1)   N(N-1)          N(N-1)(N+1)
= ----------- + C(N,2) =  ----------- + ------ = --------------------- = ------(N-2+3) = -----------
       6                       6          2                6               6                  6

1.4.5
a.) N
b.) 1
c.) 1
d.) 2N^3
e.) 1
f.) 2
g.) N^100

1.4.6
a.) N^2
b.) N^2
c.) N^2

1.4.9
2^rN_0 = 2^rbT. r = powerof 2 times N 0











